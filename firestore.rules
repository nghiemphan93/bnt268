rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isAuth (request) {
      return request.auth.uid != null;
    }

    function isOwned (request, userId) {
      return request.auth.uid == userId;
    }

    function isDEV (request) {
      return request.auth.token.DEV == true;
    }

    function isADMIN (request) {
      return request.auth.token.ADMIN == true;
    }

    function isWORKER (request) {
      return request.auth.token.WORKER  == true;
    }

    function isNotWORKER (request) {
      return isDEV(request) || isADMIN(request);
    }

    match /products/{productId} {
    	allow read: if isAuth(request);
      allow create, update: if isDEV(request) || isADMIN(request);
      allow delete: if isDEV(request);
    }

    match /users/{userId} {
    	allow get: if isNotWORKER(request) || isOwned(request, userId);
      allow list: if isNotWORKER(request);
    	allow create, update: if isDEV(request) || isADMIN(request);
    	allow delete: if isDEV(request);

      match /orders/{orderId} {
      	allow read: if isNotWORKER(request) || isOwned(request, userId);
        allow create, update: if isDEV(request) || isADMIN(request);
        allow delete: if isDEV(request);

				match /orderItems/{orderItemId} {
        	allow read: if isNotWORKER(request) || isOwned(request, userId);
        allow create, update: if isDEV(request) || isADMIN(request);
        allow delete: if isDEV(request);
        }
      }

      match /reports/{reportId} {
      	allow read: if isNotWORKER(request) || isOwned(request, userId);
        allow create, update: if isDEV(request) || isADMIN(request);
        allow delete: if isDEV(request);
      }
    }
  }
}















